{"version":3,"sources":["socket.spec.js"],"names":[],"mappings":";;;;;;AAMA;;AAGA,SAAS,eAAT,EAA0B,YAAY;;AAEpC,aAAW,OAAO,kBAAP,CAAX,EAFoC;;AAIpC,MAAI,MAAJ,EACI,KADJ,EAEI,QAFJ,EAGI,QAHJ,EAII,YAJJ,EAKI,GALJ,CAJoC;;AAWpC,aAAW,OAAO,UAAU,aAAV,EAAyB,UAAzB,EAAqC,UAArC,EAAiD,UAAjD,EAA6D;AAC7E,eAAW,UAAX,CAD6E;AAE7E,eAAW,UAAX,CAF6E;AAG7E,YAAQ,WAAW,IAAX,EAAR,CAH6E;AAI7E,UAAM,QAAQ,SAAR,CAAkB,SAAlB,CAAN,CAJ6E;AAK7E,mBAAe,GAAG,OAAH,EAAf,CAL6E;AAM7E,aAAS,cAAc;AACrB,gBAAU,YAAV;AACA,aAAO,KAAP;KAFO,CAAT,CAN6E;GAA7D,CAAlB,EAXoC;;AAwBpC,WAAS,KAAT,EAAgB,YAAY;;AAE1B,OAAG,6BAAH,EAAkC,YAAY;AAC5C,aAAO,EAAP,CAAU,OAAV,EAAmB,GAAnB,EAD4C;;AAG5C,mBAAa,IAAb,CAAkB,OAAlB,EAH4C;;AAK5C,aAAO,GAAP,EAAY,GAAZ,CAAgB,gBAAhB,GAL4C;AAM5C,eAAS,KAAT,GAN4C;;AAQ5C,aAAO,GAAP,EAAY,gBAAZ,GAR4C;KAAZ,CAAlC,CAF0B;GAAZ,CAAhB,CAxBoC;;AAwCpC,WAAS,aAAT,EAAwB,YAAY;;AAElC,OAAG,8CAAH,EAAmD,YAAY;AAC7D,mBAAa,UAAb,GAA0B,GAA1B,CAD6D;AAE7D,aAAO,UAAP,GAF6D;AAG7D,aAAO,GAAP,EAAY,gBAAZ,GAH6D;KAAZ,CAAnD,CAFkC;GAAZ,CAAxB,CAxCoC;;AAkDpC,WAAS,UAAT,EAAqB,YAAY;;AAE/B,OAAG,2CAAH,EAAgD,YAAY;AAC1D,mBAAa,OAAb,GAAuB,GAAvB,CAD0D;AAE1D,aAAO,OAAP,GAF0D;AAG1D,aAAO,GAAP,EAAY,gBAAZ,GAH0D;KAAZ,CAAhD,CAF+B;GAAZ,CAArB,CAlDoC;;AA6DpC,WAAS,OAAT,EAAkB,YAAY;;AAE5B,OAAG,6BAAH,EAAkC,YAAY;AAC5C,aAAO,IAAP,CAAY,OAAZ,EAAqB,GAArB,EAD4C;;AAG5C,mBAAa,IAAb,CAAkB,OAAlB,EAH4C;;AAK5C,aAAO,GAAP,EAAY,GAAZ,CAAgB,gBAAhB,GAL4C;AAM5C,eAAS,KAAT,GAN4C;;AAQ5C,aAAO,GAAP,EAAY,gBAAZ,GAR4C;KAAZ,CAAlC,CAF4B;;AAa5B,OAAG,sBAAH,EAA2B,YAAY;AACrC,UAAI,UAAU,CAAV,CADiC;AAErC,aAAO,IAAP,CAAY,OAAZ,EAAqB,YAAY;AAC/B,mBAAW,CAAX,CAD+B;OAAZ,CAArB,CAFqC;;AAMrC,mBAAa,IAAb,CAAkB,OAAlB,EANqC;AAOrC,mBAAa,IAAb,CAAkB,OAAlB,EAPqC;AAQrC,eAAS,KAAT,GARqC;;AAUrC,aAAO,OAAP,EAAgB,IAAhB,CAAqB,CAArB,EAVqC;KAAZ,CAA3B,CAb4B;GAAZ,CAAlB,CA7DoC;;AA0FpC,WAAS,OAAT,EAAkB,YAAY;;AAE5B,OAAG,yCAAH,EAA8C,YAAY;AACxD,YAAM,YAAN,EAAoB,MAApB,EADwD;;AAGxD,aAAO,IAAP,CAAY,OAAZ,EAAqB,EAAC,KAAK,KAAL,EAAtB,EAHwD;;AAKxD,aAAO,aAAa,IAAb,CAAP,CAA0B,gBAA1B,GALwD;KAAZ,CAA9C,CAF4B;;AAU5B,OAAG,sCAAH,EAA2C,YAAY;AACrD,YAAM,YAAN,EAAoB,MAApB,EADqD;AAErD,aAAO,IAAP,CAAY,OAAZ,EAAqB,GAArB,EAA0B,GAA1B,EAFqD;AAGrD,aAAO,aAAa,IAAb,CAAP,CAA0B,oBAA1B,CAA+C,OAA/C,EAAwD,GAAxD,EAA6D,GAA7D,EAHqD;KAAZ,CAA3C,CAV4B;;AAgB5B,OAAG,uDAAH,EAA4D,YAAY;AACtE,YAAM,YAAN,EAAoB,MAApB,EADsE;AAEtE,aAAO,IAAP,CAAY,OAAZ,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAFsE;AAGtE,aAAO,aAAa,IAAb,CAAkB,cAAlB,CAAiC,IAAjC,CAAsC,CAAtC,CAAP,EAAiD,OAAjD,CAAyD,GAAzD,EAHsE;;AAKtE,mBAAa,IAAb,CAAkB,cAAlB,CAAiC,IAAjC,CAAsC,CAAtC,IALsE;AAMtE,aAAO,GAAP,EAAY,GAAZ,CAAgB,gBAAhB,GANsE;AAOtE,eAAS,KAAT,GAPsE;;AAStE,aAAO,GAAP,EAAY,gBAAZ,GATsE;KAAZ,CAA5D,CAhB4B;GAAZ,CAAlB,CA1FoC;;AAyHpC,WAAS,iBAAT,EAA4B,YAAY;;AAEtC,OAAG,yCAAH,EAA8C,YAAY;AACxD,aAAO,EAAP,CAAU,OAAV,EAAmB,GAAnB,EADwD;AAExD,aAAO,cAAP,CAAsB,OAAtB,EAA+B,GAA/B,EAFwD;;AAIxD,mBAAa,IAAb,CAAkB,OAAlB,EAJwD;;AAMxD,aAAO,SAAS,WAAT,CAAqB,MAArB,CAAP,CAAoC,IAApC,CAAyC,CAAzC,EANwD;KAAZ,CAA9C,CAFsC;GAAZ,CAA5B,CAzHoC;;AAuIpC,WAAS,qBAAT,EAAgC,YAAY;;AAE1C,OAAG,uDAAH,EAA4D,YAAY;AACtE,aAAO,EAAP,CAAU,OAAV,EAAmB,GAAnB,EADsE;AAEtE,aAAO,kBAAP,CAA0B,OAA1B,EAFsE;;AAItE,mBAAa,IAAb,CAAkB,OAAlB,EAJsE;;AAMtE,aAAO,SAAS,WAAT,CAAqB,MAArB,CAAP,CAAoC,IAApC,CAAyC,CAAzC,EANsE;KAAZ,CAA5D,CAF0C;;AAW1C,OAAG,8CAAH,EAAmD,YAAY;AAC7D,aAAO,EAAP,CAAU,OAAV,EAAmB,GAAnB,EAD6D;AAE7D,aAAO,EAAP,CAAU,QAAV,EAAoB,GAApB,EAF6D;AAG7D,aAAO,kBAAP,GAH6D;;AAK7D,mBAAa,IAAb,CAAkB,OAAlB,EAL6D;AAM7D,mBAAa,IAAb,CAAkB,QAAlB,EAN6D;;AAQ7D,aAAO,SAAS,WAAT,CAAqB,MAArB,CAAP,CAAoC,IAApC,CAAyC,CAAzC,EAR6D;KAAZ,CAAnD,CAX0C;GAAZ,CAAhC,CAvIoC;;AAgKpC,WAAS,UAAT,EAAqB,YAAY;;AAE/B,OAAG,uBAAH,EAA4B,YAAY;AACtC,aAAO,OAAP,CAAe,OAAf,EADsC;;AAGtC,YAAM,GAAN,CAAU,cAAV,EAA0B,GAA1B,EAHsC;AAItC,mBAAa,IAAb,CAAkB,OAAlB,EAJsC;AAKtC,eAAS,KAAT,GALsC;;AAOtC,aAAO,GAAP,EAAY,gBAAZ,GAPsC;KAAZ,CAA5B,CAF+B;;AAY/B,OAAG,mCAAH,EAAwC,YAAY;AAClD,aAAO,OAAP,CAAe,CAAC,IAAD,EAAO,IAAP,CAAf,EADkD;;AAGlD,YAAM,GAAN,CAAU,WAAV,EAAuB,GAAvB,EAHkD;AAIlD,YAAM,GAAN,CAAU,WAAV,EAAuB,GAAvB,EAJkD;;AAMlD,mBAAa,IAAb,CAAkB,IAAlB,EANkD;AAOlD,mBAAa,IAAb,CAAkB,IAAlB,EAPkD;AAQlD,eAAS,KAAT,GARkD;AASlD,aAAO,IAAI,SAAJ,CAAP,CAAsB,IAAtB,CAA2B,CAA3B,EATkD;KAAZ,CAAxC,CAZ+B;;AAwB/B,OAAG,kDAAH,EAAuD,YAAY;;AAEjE,aAAO,OAAP,CAAe,OAAf,EAFiE;AAGjE,YAAM,GAAN,CAAU,cAAV,EAA0B,GAA1B,EAHiE;AAIjE,mBAAa,IAAb,CAAkB,OAAlB,EAJiE;AAKjE,eAAS,KAAT,GALiE;;AAOjE,aAAO,GAAP,EAAY,gBAAZ,GAPiE;;AASjE,YAAM,QAAN,GATiE;AAUjE,UAAI,KAAJ,GAViE;AAWjE,mBAAa,IAAb,CAAkB,OAAlB,EAXiE;AAYjE,aAAO,GAAP,EAAY,GAAZ,CAAgB,gBAAhB,GAZiE;KAAZ,CAAvD,CAxB+B;;AAuC/B,OAAG,iCAAH,EAAsC,OAAO,UAAU,aAAV,EAAyB;AACpE,UAAI,SAAS,cAAc;AACzB,kBAAU,YAAV;AACA,eAAO,KAAP;AACA,gBAAQ,SAAR;OAHW,CAAT,CADgE;;AAOpE,aAAO,OAAP,CAAe,OAAf,EAPoE;;AASpE,YAAM,GAAN,CAAU,cAAV,EAA0B,GAA1B,EAToE;AAUpE,mBAAa,IAAb,CAAkB,OAAlB,EAVoE;AAWpE,eAAS,KAAT,GAXoE;;AAapE,aAAO,GAAP,EAAY,gBAAZ,GAboE;KAAzB,CAA7C,EAvC+B;;AAuD/B,OAAG,yCAAH,EAA8C,OAAO,UAAU,aAAV,EAAyB;AAC5E,UAAI,SAAS,cAAc;AACzB,kBAAU,YAAV;AACA,eAAO,KAAP;AACA,gBAAQ,EAAR;OAHW,CAAT,CADwE;;AAO5E,aAAO,OAAP,CAAe,OAAf,EAP4E;;AAS5E,YAAM,GAAN,CAAU,OAAV,EAAmB,GAAnB,EAT4E;AAU5E,mBAAa,IAAb,CAAkB,OAAlB,EAV4E;AAW5E,eAAS,KAAT,GAX4E;;AAa5E,aAAO,GAAP,EAAY,gBAAZ,GAb4E;KAAzB,CAArD,EAvD+B;;AAuE/B,OAAG,4DAAH,EAAiE,YAAY;AAC3E,UAAI,QAAQ,MAAM,IAAN,EAAR,CADuE;AAE3E,YAAM,KAAN,EAAa,YAAb,EAF2E;AAG3E,aAAO,OAAP,CAAe,OAAf,EAAwB,KAAxB,EAH2E;;AAK3E,YAAM,GAAN,CAAU,cAAV,EAA0B,GAA1B,EAL2E;AAM3E,mBAAa,IAAb,CAAkB,OAAlB,EAN2E;AAO3E,eAAS,KAAT,GAP2E;;AAS3E,aAAO,MAAM,UAAN,CAAP,CAAyB,gBAAzB,GAT2E;KAAZ,CAAjE,CAvE+B;;AAmF/B,OAAG,wCAAH,EAA6C,YAAY;AACvD,aAAO,OAAP,CAAe,OAAf,EADuD;AAEvD,YAAM,GAAN,CAAU,cAAV,EAA0B,GAA1B,EAFuD;AAGvD,mBAAa,IAAb,CAAkB,OAAlB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC,EAHuD;AAIvD,eAAS,KAAT,GAJuD;;AAMvD,aAAO,IAAI,KAAJ,CAAU,CAAV,EAAa,IAAb,CAAkB,KAAlB,CAAwB,CAAxB,CAAP,EAAmC,OAAnC,CAA2C,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAA3C,EANuD;KAAZ,CAA7C,CAnF+B;GAAZ,CAArB,CAhKoC;CAAZ,CAA1B","file":"socket.spec-compiled.js","sourcesContent":["/*\n * angular-socket-io v0.4.1\n * (c) 2014 Brian Ford http://briantford.com\n * License: MIT\n */\n\n'use strict';\n\n\ndescribe('socketFactory', function () {\n\n  beforeEach(module('btford.socket-io'));\n\n  var socket,\n      scope,\n      $timeout,\n      $browser,\n      mockIoSocket,\n      spy;\n\n  beforeEach(inject(function (socketFactory, _$browser_, $rootScope, _$timeout_) {\n    $browser = _$browser_;\n    $timeout = _$timeout_;\n    scope = $rootScope.$new();\n    spy = jasmine.createSpy('emitSpy');\n    mockIoSocket = io.connect();\n    socket = socketFactory({\n      ioSocket: mockIoSocket,\n      scope: scope\n    });\n  }));\n\n\n  describe('#on', function () {\n\n    it('should apply asynchronously', function () {\n      socket.on('event', spy);\n\n      mockIoSocket.emit('event');\n\n      expect(spy).not.toHaveBeenCalled();\n      $timeout.flush();\n\n      expect(spy).toHaveBeenCalled();\n    });\n\n  });\n\n\n  describe('#disconnect', function () {\n\n    it('should call the underlying socket.disconnect', function () {\n      mockIoSocket.disconnect = spy;\n      socket.disconnect();\n      expect(spy).toHaveBeenCalled();\n    });\n\n  });\n\n  describe('#connect', function () {\n\n    it('should call the underlying socket.connect', function () {\n      mockIoSocket.connect = spy;\n      socket.connect();\n      expect(spy).toHaveBeenCalled();\n    });\n\n  });\n\n\n  describe('#once', function () {\n\n    it('should apply asynchronously', function () {\n      socket.once('event', spy);\n\n      mockIoSocket.emit('event');\n\n      expect(spy).not.toHaveBeenCalled();\n      $timeout.flush();\n\n      expect(spy).toHaveBeenCalled();\n    });\n\n    it('should only run once', function () {\n      var counter = 0;\n      socket.once('event', function () {\n        counter += 1;\n      });\n\n      mockIoSocket.emit('event');\n      mockIoSocket.emit('event');\n      $timeout.flush();\n\n      expect(counter).toBe(1);\n    });\n\n  });\n\n\n  describe('#emit', function () {\n\n    it('should call the delegate socket\\'s emit', function () {\n      spyOn(mockIoSocket, 'emit');\n\n      socket.emit('event', {foo: 'bar'});\n\n      expect(mockIoSocket.emit).toHaveBeenCalled();\n    });\n\n    it('should allow multiple data arguments', function () {\n      spyOn(mockIoSocket, 'emit');\n      socket.emit('event', 'x', 'y');\n      expect(mockIoSocket.emit).toHaveBeenCalledWith('event', 'x', 'y');\n    });\n\n    it('should wrap the callback with multiple data arguments', function () {\n      spyOn(mockIoSocket, 'emit');\n      socket.emit('event', 'x', 'y', spy);\n      expect(mockIoSocket.emit.mostRecentCall.args[3]).toNotBe(spy);\n\n      mockIoSocket.emit.mostRecentCall.args[3]();\n      expect(spy).not.toHaveBeenCalled();\n      $timeout.flush();\n\n      expect(spy).toHaveBeenCalled();\n    });\n\n  });\n\n\n  describe('#removeListener', function () {\n\n    it('should not call after removing an event', function () {\n      socket.on('event', spy);\n      socket.removeListener('event', spy);\n\n      mockIoSocket.emit('event');\n\n      expect($browser.deferredFns.length).toBe(0);\n    });\n\n  });\n\n\n  describe('#removeAllListeners', function () {\n\n    it('should not call after removing listeners for an event', function () {\n      socket.on('event', spy);\n      socket.removeAllListeners('event');\n\n      mockIoSocket.emit('event');\n\n      expect($browser.deferredFns.length).toBe(0);\n    });\n\n    it('should not call after removing all listeners', function () {\n      socket.on('event', spy);\n      socket.on('event2', spy);\n      socket.removeAllListeners();\n\n      mockIoSocket.emit('event');\n      mockIoSocket.emit('event2');\n\n      expect($browser.deferredFns.length).toBe(0);\n    });\n\n  });\n\n\n  describe('#forward', function () {\n\n    it('should forward events', function () {\n      socket.forward('event');\n\n      scope.$on('socket:event', spy);\n      mockIoSocket.emit('event');\n      $timeout.flush();\n\n      expect(spy).toHaveBeenCalled();\n    });\n\n    it('should forward an array of events', function () {\n      socket.forward(['e1', 'e2']);\n\n      scope.$on('socket:e1', spy);\n      scope.$on('socket:e2', spy);\n\n      mockIoSocket.emit('e1');\n      mockIoSocket.emit('e2');\n      $timeout.flush();\n      expect(spy.callCount).toBe(2);\n    });\n\n    it('should remove watchers when the scope is removed', function () {\n\n      socket.forward('event');\n      scope.$on('socket:event', spy);\n      mockIoSocket.emit('event');\n      $timeout.flush();\n\n      expect(spy).toHaveBeenCalled();\n\n      scope.$destroy();\n      spy.reset();\n      mockIoSocket.emit('event');\n      expect(spy).not.toHaveBeenCalled();\n    });\n\n    it('should use the specified prefix', inject(function (socketFactory) {\n      var socket = socketFactory({\n        ioSocket: mockIoSocket,\n        scope: scope,\n        prefix: 'custom:'\n      });\n\n      socket.forward('event');\n\n      scope.$on('custom:event', spy);\n      mockIoSocket.emit('event');\n      $timeout.flush();\n\n      expect(spy).toHaveBeenCalled();\n    }));\n\n    it('should use an empty prefix if specified', inject(function (socketFactory) {\n      var socket = socketFactory({\n        ioSocket: mockIoSocket,\n        scope: scope,\n        prefix: ''\n      });\n\n      socket.forward('event');\n\n      scope.$on('event', spy);\n      mockIoSocket.emit('event');\n      $timeout.flush();\n\n      expect(spy).toHaveBeenCalled();\n    }));\n\n    it('should forward to the specified scope when one is provided', function () {\n      var child = scope.$new();\n      spyOn(child, '$broadcast');\n      socket.forward('event', child);\n\n      scope.$on('socket:event', spy);\n      mockIoSocket.emit('event');\n      $timeout.flush();\n\n      expect(child.$broadcast).toHaveBeenCalled();\n    });\n\n    it('should pass all arguments to scope.$on', function () {\n      socket.forward('event');\n      scope.$on('socket:event', spy);\n      mockIoSocket.emit('event', 1, 2, 3);\n      $timeout.flush();\n\n      expect(spy.calls[0].args.slice(1)).toEqual([1, 2, 3]);\n    });\n  });\n\n});\n"]}