{"version":3,"sources":["socket-io.js"],"names":[],"mappings":"AAAA,IAAI,KAAK;AACP,WAAS,sBAAT;CADE;;AAIJ,SAAS,sBAAT,GAAmC;;AAEjC,MAAI,SAAS;AACX,QAAI,UAAU,EAAV,EAAc,EAAd,EAAkB;AACpB,OAAC,KAAK,UAAL,CAAgB,EAAhB,IAAsB,KAAK,UAAL,CAAgB,EAAhB,KAAuB,EAAvB,CAAvB,CAAkD,IAAlD,CAAuD,EAAvD,EADoB;KAAlB;AAGJ,UAAM,UAAU,EAAV,EAAc,EAAd,EAAkB;AACtB,OAAC,KAAK,UAAL,CAAgB,EAAhB,IAAsB,KAAK,UAAL,CAAgB,EAAhB,KAAuB,EAAvB,CAAvB,CAAkD,IAAlD,CAAuD,EAAvD,EADsB;AAEtB,SAAG,KAAH,GAAW,IAAX,CAFsB;KAAlB;AAIN,UAAM,UAAU,EAAV,EAAc,IAAd,EAAoB;AACxB,UAAI,KAAK,UAAL,CAAgB,EAAhB,CAAJ,EAAyB;AACvB,YAAI,OAAO,SAAP,CADmB;AAEvB,aAAK,UAAL,CAAgB,EAAhB,EAAoB,OAApB,CAA4B,UAAU,QAAV,EAAoB;AAC9C,cAAI,SAAS,KAAT,EAAgB;AAClB,iBAAK,cAAL,CAAoB,EAApB,EAAwB,QAAxB,EADkB;WAApB;AAGA,mBAAS,KAAT,CAAe,IAAf,EAAqB,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,IAA3B,EAAiC,CAAjC,CAArB,EAJ8C;SAApB,CAK1B,IAL0B,CAKrB,IALqB,CAA5B,EAFuB;OAAzB;KADI;AAWN,gBAAY,EAAZ;AACA,oBAAgB,UAAU,EAAV,EAAc,EAAd,EAAkB;AAChC,UAAI,EAAJ,EAAQ;AACN,YAAI,QAAQ,KAAK,UAAL,CAAgB,EAAhB,EAAoB,OAApB,CAA4B,EAA5B,CAAR,CADE;AAEN,YAAI,QAAQ,CAAC,CAAD,EAAI;AACd,eAAK,UAAL,CAAgB,EAAhB,EAAoB,MAApB,CAA2B,KAA3B,EAAkC,CAAlC,EADc;SAAhB;OAFF,MAKO;AACL,eAAO,KAAK,UAAL,CAAgB,EAAhB,CAAP,CADK;OALP;KADc;AAUhB,wBAAoB,UAAU,EAAV,EAAc;AAChC,UAAI,EAAJ,EAAQ;AACN,eAAO,KAAK,UAAL,CAAgB,EAAhB,CAAP,CADM;OAAR,MAEO;AACL,aAAK,UAAL,GAAkB,EAAlB,CADK;OAFP;KADkB;AAOpB,gBAAY,YAAY,EAAZ;AACZ,aAAS,YAAY,EAAZ;GAtCP,CAF6B;;AA2CjC,SAAO,MAAP,CA3CiC;CAAnC","file":"socket-io-compiled.js","sourcesContent":["var io = {\n  connect: createMockSocketObject\n};\n\nfunction createMockSocketObject () {\n\n  var socket = {\n    on: function (ev, fn) {\n      (this._listeners[ev] = this._listeners[ev] || []).push(fn);\n    },\n    once: function (ev, fn) {\n      (this._listeners[ev] = this._listeners[ev] || []).push(fn);\n      fn._once = true;\n    },\n    emit: function (ev, data) {\n      if (this._listeners[ev]) {\n        var args = arguments;\n        this._listeners[ev].forEach(function (listener) {\n          if (listener._once) {\n            this.removeListener(ev, listener);\n          }\n          listener.apply(null, Array.prototype.slice.call(args, 1));\n        }.bind(this));\n      }\n    },\n    _listeners: {},\n    removeListener: function (ev, fn) {\n      if (fn) {\n        var index = this._listeners[ev].indexOf(fn);\n        if (index > -1) {\n          this._listeners[ev].splice(index, 1);\n        }\n      } else {\n        delete this._listeners[ev];\n      }\n    },\n    removeAllListeners: function (ev) {\n      if (ev) {\n        delete this._listeners[ev];\n      } else {\n        this._listeners = {};\n      }\n    },\n    disconnect: function () {},\n    connect: function () {}\n  };\n\n  return socket;\n}\n"]}